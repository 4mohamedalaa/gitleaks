name: Gitleaks Scanner
on: [push, pull_request]

# Add permissions block at workflow level
permissions:
    contents: read
    security-events: write
    issues: write    # Permission to create issues
jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACTION_TOKEN }}
        continue-on-error: true
  
      - name: Create Issue on Failure
        if: steps.gitleaks.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_ACTION_TOKEN }}
          script: |
            const issueBody = `## ðŸš¨ Security Issue: Potential secrets detected
            
            Gitleaks has detected potential secrets in the codebase.
            
            **Details:**
            - Commit: ${context.sha}
            - Branch: ${context.ref}
            - Workflow run: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            ### Next Steps:
            1. Review the scan results in the Actions tab
            2. Remove any detected secrets
            3. Rotate any exposed credentials
            4. Update any affected systems
            
            Please handle this with urgency to maintain security.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Issue: Potential secrets detected',
              body: issueBody,
              labels: ['security', 'gitleaks']
            });
  
      - name: Save Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-scan-results
          path: results.sarif
          retention-days: 30