name: Gitleaks Scanner
on: [push, pull_request]

permissions:
    contents: read
    security-events: write
    issues: write

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Install Gitleaks
        run: |
          wget https://github.com/zricethezav/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz
          tar -xzf gitleaks_8.16.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/
      
      - name: Run Full Repository Scan
        id: gitleaks
        run: |
          # Scan the entire repository
          gitleaks detect \
            --source . \
            --verbose \
            --report-format json \
            --report-path leaks.json \
            --no-git || echo "LEAKS_FOUND=true" >> $GITHUB_ENV

      - name: Check for Leaks
        run: |
          if [ -f leaks.json ]; then
            echo "Secrets detected in the repository!"
            cat leaks.json
            exit 1
          fi

      - name: Create Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_ACTION_TOKEN }}
          script: |
            const fs = require('fs');
            let leaksDetail = '';
            
            if (fs.existsSync('leaks.json')) {
              const leaks = JSON.parse(fs.readFileSync('leaks.json', 'utf8'));
              leaksDetail = JSON.stringify(leaks, null, 2);
            }

            const issueBody = `## ðŸš¨ Security Issue: Potential secrets detected
            
            Gitleaks has detected secrets in the codebase.
            
            **Details:**
            - Commit: ${context.sha}
            - Branch: ${context.ref}
            - Workflow run: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            ### Detected Secrets:
            \`\`\`json
            ${leaksDetail}
            \`\`\`
            
            ### Required Actions:
            1. Remove ALL detected secrets from the codebase
            2. Rotate any exposed credentials
            3. Update affected systems
            
            â›” **PIPELINE BLOCKED**: This pipeline will continue to fail until all secrets are removed.
            
            Please handle this with urgency.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Issue: Secrets Found in Repository',
              body: issueBody,
              labels: ['security', 'gitleaks', 'pipeline-blocker']
            });

      - name: Save Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-scan-results
          path: |
            leaks.json
            results.sarif
          retention-days: 30