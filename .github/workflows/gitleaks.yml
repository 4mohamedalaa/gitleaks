name: GitLeaks Secret Scanner

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:     # Allow manual triggers

jobs:
  scan:
    name: GitLeaks Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Install Gitleaks
        run: |
          wget https://github.com/zricethezav/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz
          tar -xzf gitleaks_8.16.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks
        id: gitleaks
        run: |
          # Run gitleaks and output to text file
          gitleaks detect -v --source . > scan_output.txt || true
          
          # Check if leaks were found
          if grep -q "Finding:" scan_output.txt; then
            echo "::set-output name=leaks_found::true"
            echo "Secrets detected in the repository!"
            cat scan_output.txt
            exit 1
          else
            echo "No secrets detected!"
          fi

      - name: Create Issue on Failure
        if: failure() && steps.gitleaks.outputs.leaks_found == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_ACTION_TOKEN }}
          script: |
            const fs = require('fs');
            
            let findings = '';
            if (fs.existsSync('scan_output.txt')) {
              findings = fs.readFileSync('scan_output.txt', 'utf8').substring(0, 2000) + 
                         (fs.readFileSync('scan_output.txt', 'utf8').length > 2000 ? 
                          '\n\n... output truncated, see workflow artifacts for complete results ...' : '');
            }
            
            const issueBody = `## ðŸš¨ Security Issue: Secrets detected in repository
            
            GitLeaks has detected secrets in the codebase that need to be addressed immediately.
            
            **Details:**
            - Commit: ${context.sha}
            - Branch: ${context.ref}
            - Workflow: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            ### Detected Secrets (partial list):
            \`\`\`
            ${findings}
            \`\`\`
            
            ### Required Actions:
            
            1. **Remove the secrets from your code**
               - Replace hardcoded credentials with environment variables
               - Ensure all files with secrets are removed

            2. **Remove secrets from git history**
               \`\`\`bash
               # For specific files (like secrets.txt):
               git filter-branch --force --index-filter "git rm --cached --ignore-unmatch secrets.txt" --prune-empty --tag-name-filter cat -- --all
               git push origin --force --all
               \`\`\`
               
            3. **Rotate all compromised credentials**
               - Change all passwords that were exposed
               - Revoke and regenerate all API keys and tokens
               
            4. **Implement proper secret management**
               - Use GitHub Secrets for workflow credentials
               - Use environment variables in your applications
               - Consider using a secret management tool
            
            Please address this issue immediately to prevent unauthorized access to your systems.`;
            
            // Check if there's already an open issue for this
            const openIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['security', 'gitleaks']
            });
            
            if (openIssues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸš¨ Security Issue: Secrets Found in Repository',
                body: issueBody,
                labels: ['security', 'gitleaks']
              });
            } else {
              console.log("An open GitLeaks issue already exists, not creating a duplicate");
            }

      - name: Save Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-scan-results
          path: scan_output.txt
          retention-days: 30
          
      - name: Notify on Success
        if: success()
        run: |
          echo "âœ… GitLeaks scan completed successfully with no secrets detected!"

          