name: Gitleaks Scanner
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetches the entire commit history

      - name: Run Gitleaks
        id: gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GIT_ACTION_TOKEN }}
          GITLEAKS_ENABLE_EXIT_CODE: true  # Ensures non-zero exit code on findings
        with:
          # Scan the entire repository (current state of files)
          config-path: .gitleaks.toml  # Path to your Gitleaks config file
          scan-mode: local              # Scans the current state of the repository
          verbose: true                 # Enables verbose output for debugging

      - name: Create Issue on Failure
        if: failure() && steps.gitleaks.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GIT_ACTION_TOKEN }}
          script: |
            const issueBody = `## ðŸš¨ Security Issue: Potential secrets detected
            
            Gitleaks has detected potential secrets in the codebase.
            
            **Details:**
            - Commit: ${context.sha}
            - Branch: ${context.ref}
            - Workflow run: ${process.env.GITHUB_SERVER_URL}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
            
            ### Next Steps:
            1. Review the scan results in the Actions tab
            2. Remove any detected secrets
            3. Rotate any exposed credentials
            4. Update any affected systems
            
            â›” **IMPORTANT**: The pipeline will continue to fail until all detected secrets are removed.
            
            Please handle this with urgency to maintain security.`;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸš¨ Security Issue: Potential secrets detected',
              body: issueBody,
              labels: ['security', 'gitleaks', 'pipeline-blocker']
            });

      - name: Save Scan Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-scan-results
          path: results.sarif
          retention-days: 30

      - name: Fail if secrets found
        if: steps.gitleaks.outcome == 'failure'
        run: |
          echo "ðŸš¨ Secrets detected in the codebase!"
          echo "Please remove all secrets and try again."
          exit 1