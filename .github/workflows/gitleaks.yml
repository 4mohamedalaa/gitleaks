name: GitLeaks Secret Scanner

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:      # Allow manual triggers

jobs:
  scan:
    name: GitLeaks Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Gitleaks
        run: |
          wget https://github.com/zricethezav/gitleaks/releases/download/v8.16.1/gitleaks_8.16.1_linux_x64.tar.gz
          tar -xzf gitleaks_8.16.1_linux_x64.tar.gz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks
        id: gitleaks
        continue-on-error: true
        run: |
          OUTPUT=$(gitleaks detect -v --no-git --source . -c .gitleaks.toml -f json)
          echo "GITLEAKS_OUTPUT<<EOF" >> $GITHUB_ENV
          echo "$OUTPUT" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          if [ $? -eq 1 ]; then
            echo "SECRETS_FOUND=true" >> $GITHUB_ENV
          else
            echo "SECRETS_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Create Issue
        if: env.SECRETS_FOUND == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const output = process.env.GITLEAKS_OUTPUT;
            let findings;
            try {
              findings = JSON.parse(output);
            } catch (e) {
              findings = [];
            }
            
            const issueBody = `
            ## 🚨 Secrets Detected in Repository
            
            GitLeaks has detected potential secrets in the codebase. Please review and remove any sensitive information.
            
            ### Findings:
            ${findings.map(finding => `
            - **Description**: ${finding.Description}
            - **File**: ${finding.File}
            - **Line**: ${finding.StartLine}
            - **Rule**: ${finding.RuleID}
            `).join('\n')}
            
            ### 🔍 Next Steps:
            1. Review the detected secrets
            2. Remove or rotate any exposed credentials
            3. Use environment variables or secret management systems
            4. Update the code to remove the secrets
            
            > Note: This is an automated security alert. Please handle with care.
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: '🚨 Secrets Detected by GitLeaks',
              body: issueBody,
              labels: ['security', 'secrets-detected']
            });

      - name: Upload SARIF report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-results
          path: results.sarif